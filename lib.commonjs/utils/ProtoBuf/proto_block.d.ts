/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 4.25.3
 * source: proto_block.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./proto_common";
import * as pb_1 from "google-protobuf";
export declare namespace block {
    class ProtoBlock extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            header?: ProtoHeader;
        }) | ({
            body?: ProtoBody;
        }))));
        get header(): ProtoHeader;
        set header(value: ProtoHeader);
        get has_header(): boolean;
        get body(): ProtoBody;
        set body(value: ProtoBody);
        get has_body(): boolean;
        get _header(): "none" | "header";
        get _body(): "none" | "body";
        static fromObject(data: {
            header?: ReturnType<typeof ProtoHeader.prototype.toObject>;
            body?: ReturnType<typeof ProtoBody.prototype.toObject>;
        }): ProtoBlock;
        toObject(): {
            header?: {
                parent_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                uncle_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                coinbase?: Uint8Array | undefined;
                evm_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_rollup_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                manifest_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                receipt_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                difficulty?: Uint8Array | undefined;
                parent_entropy?: Uint8Array[] | undefined;
                parent_delta_s?: Uint8Array[] | undefined;
                number?: Uint8Array[] | undefined;
                gas_limit?: number | undefined;
                gas_used?: number | undefined;
                base_fee?: Uint8Array | undefined;
                location?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                time?: number | undefined;
                extra?: Uint8Array | undefined;
                mix_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                nonce?: number | undefined;
                utxo_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_set_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            body?: {
                txs?: {
                    transactions?: {
                        type?: number | undefined;
                        to?: Uint8Array | undefined;
                        nonce?: number | undefined;
                        value?: Uint8Array | undefined;
                        gas?: number | undefined;
                        data?: Uint8Array | undefined;
                        chain_id?: Uint8Array | undefined;
                        gas_fee_cap?: Uint8Array | undefined;
                        gas_tip_cap?: Uint8Array | undefined;
                        access_list?: {
                            access_tuples?: {
                                address?: Uint8Array | undefined;
                                storage_key?: {
                                    value?: Uint8Array | undefined;
                                }[] | undefined;
                            }[] | undefined;
                        } | undefined;
                        v?: Uint8Array | undefined;
                        r?: Uint8Array | undefined;
                        s?: Uint8Array | undefined;
                        originating_tx_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        etx_index?: number | undefined;
                        tx_ins?: {
                            tx_ins?: {
                                previous_out_point?: {
                                    hash?: {
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    index?: number | undefined;
                                } | undefined;
                                pub_key?: Uint8Array | undefined;
                            }[] | undefined;
                        } | undefined;
                        tx_outs?: {
                            tx_outs?: {
                                denomination?: number | undefined;
                                address?: Uint8Array | undefined;
                            }[] | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                        etx_sender?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
                uncles?: {
                    headers?: {
                        parent_hash?: {
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        uncle_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        coinbase?: Uint8Array | undefined;
                        evm_root?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        tx_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        etx_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        etx_rollup_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        manifest_hash?: {
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        receipt_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        difficulty?: Uint8Array | undefined;
                        parent_entropy?: Uint8Array[] | undefined;
                        parent_delta_s?: Uint8Array[] | undefined;
                        number?: Uint8Array[] | undefined;
                        gas_limit?: number | undefined;
                        gas_used?: number | undefined;
                        base_fee?: Uint8Array | undefined;
                        location?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        time?: number | undefined;
                        extra?: Uint8Array | undefined;
                        mix_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        nonce?: number | undefined;
                        utxo_root?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        etx_set_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                    }[] | undefined;
                } | undefined;
                etxs?: {
                    transactions?: {
                        type?: number | undefined;
                        to?: Uint8Array | undefined;
                        nonce?: number | undefined;
                        value?: Uint8Array | undefined;
                        gas?: number | undefined;
                        data?: Uint8Array | undefined;
                        chain_id?: Uint8Array | undefined;
                        gas_fee_cap?: Uint8Array | undefined;
                        gas_tip_cap?: Uint8Array | undefined;
                        access_list?: {
                            access_tuples?: {
                                address?: Uint8Array | undefined;
                                storage_key?: {
                                    value?: Uint8Array | undefined;
                                }[] | undefined;
                            }[] | undefined;
                        } | undefined;
                        v?: Uint8Array | undefined;
                        r?: Uint8Array | undefined;
                        s?: Uint8Array | undefined;
                        originating_tx_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        etx_index?: number | undefined;
                        tx_ins?: {
                            tx_ins?: {
                                previous_out_point?: {
                                    hash?: {
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    index?: number | undefined;
                                } | undefined;
                                pub_key?: Uint8Array | undefined;
                            }[] | undefined;
                        } | undefined;
                        tx_outs?: {
                            tx_outs?: {
                                denomination?: number | undefined;
                                address?: Uint8Array | undefined;
                            }[] | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                        etx_sender?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
                manifest?: {
                    manifest?: {
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoBlock;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoBlock;
    }
    class ProtoBody extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            txs?: ProtoTransactions;
        }) | ({
            uncles?: ProtoHeaders;
        }) | ({
            etxs?: ProtoTransactions;
        }) | ({
            manifest?: ProtoManifest;
        }))));
        get txs(): ProtoTransactions;
        set txs(value: ProtoTransactions);
        get has_txs(): boolean;
        get uncles(): ProtoHeaders;
        set uncles(value: ProtoHeaders);
        get has_uncles(): boolean;
        get etxs(): ProtoTransactions;
        set etxs(value: ProtoTransactions);
        get has_etxs(): boolean;
        get manifest(): ProtoManifest;
        set manifest(value: ProtoManifest);
        get has_manifest(): boolean;
        get _txs(): "none" | "txs";
        get _uncles(): "none" | "uncles";
        get _etxs(): "none" | "etxs";
        get _manifest(): "none" | "manifest";
        static fromObject(data: {
            txs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;
            uncles?: ReturnType<typeof ProtoHeaders.prototype.toObject>;
            etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;
            manifest?: ReturnType<typeof ProtoManifest.prototype.toObject>;
        }): ProtoBody;
        toObject(): {
            txs?: {
                transactions?: {
                    type?: number | undefined;
                    to?: Uint8Array | undefined;
                    nonce?: number | undefined;
                    value?: Uint8Array | undefined;
                    gas?: number | undefined;
                    data?: Uint8Array | undefined;
                    chain_id?: Uint8Array | undefined;
                    gas_fee_cap?: Uint8Array | undefined;
                    gas_tip_cap?: Uint8Array | undefined;
                    access_list?: {
                        access_tuples?: {
                            address?: Uint8Array | undefined;
                            storage_key?: {
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                        }[] | undefined;
                    } | undefined;
                    v?: Uint8Array | undefined;
                    r?: Uint8Array | undefined;
                    s?: Uint8Array | undefined;
                    originating_tx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_index?: number | undefined;
                    tx_ins?: {
                        tx_ins?: {
                            previous_out_point?: {
                                hash?: {
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                index?: number | undefined;
                            } | undefined;
                            pub_key?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    tx_outs?: {
                        tx_outs?: {
                            denomination?: number | undefined;
                            address?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                    etx_sender?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
            uncles?: {
                headers?: {
                    parent_hash?: {
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    uncle_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    coinbase?: Uint8Array | undefined;
                    evm_root?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    tx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_rollup_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    manifest_hash?: {
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    receipt_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    difficulty?: Uint8Array | undefined;
                    parent_entropy?: Uint8Array[] | undefined;
                    parent_delta_s?: Uint8Array[] | undefined;
                    number?: Uint8Array[] | undefined;
                    gas_limit?: number | undefined;
                    gas_used?: number | undefined;
                    base_fee?: Uint8Array | undefined;
                    location?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    time?: number | undefined;
                    extra?: Uint8Array | undefined;
                    mix_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    nonce?: number | undefined;
                    utxo_root?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_set_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
            etxs?: {
                transactions?: {
                    type?: number | undefined;
                    to?: Uint8Array | undefined;
                    nonce?: number | undefined;
                    value?: Uint8Array | undefined;
                    gas?: number | undefined;
                    data?: Uint8Array | undefined;
                    chain_id?: Uint8Array | undefined;
                    gas_fee_cap?: Uint8Array | undefined;
                    gas_tip_cap?: Uint8Array | undefined;
                    access_list?: {
                        access_tuples?: {
                            address?: Uint8Array | undefined;
                            storage_key?: {
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                        }[] | undefined;
                    } | undefined;
                    v?: Uint8Array | undefined;
                    r?: Uint8Array | undefined;
                    s?: Uint8Array | undefined;
                    originating_tx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_index?: number | undefined;
                    tx_ins?: {
                        tx_ins?: {
                            previous_out_point?: {
                                hash?: {
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                index?: number | undefined;
                            } | undefined;
                            pub_key?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    tx_outs?: {
                        tx_outs?: {
                            denomination?: number | undefined;
                            address?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                    etx_sender?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
            manifest?: {
                manifest?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoBody;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoBody;
    }
    class ProtoHeader extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({
            parent_hash?: dependency_1.common.ProtoHash[];
            manifest_hash?: dependency_1.common.ProtoHash[];
            parent_entropy?: Uint8Array[];
            parent_delta_s?: Uint8Array[];
            number?: Uint8Array[];
        } & (({
            uncle_hash?: dependency_1.common.ProtoHash;
        }) | ({
            coinbase?: Uint8Array;
        }) | ({
            evm_root?: dependency_1.common.ProtoHash;
        }) | ({
            tx_hash?: dependency_1.common.ProtoHash;
        }) | ({
            etx_hash?: dependency_1.common.ProtoHash;
        }) | ({
            etx_rollup_hash?: dependency_1.common.ProtoHash;
        }) | ({
            receipt_hash?: dependency_1.common.ProtoHash;
        }) | ({
            difficulty?: Uint8Array;
        }) | ({
            gas_limit?: number;
        }) | ({
            gas_used?: number;
        }) | ({
            base_fee?: Uint8Array;
        }) | ({
            location?: dependency_1.common.ProtoLocation;
        }) | ({
            time?: number;
        }) | ({
            extra?: Uint8Array;
        }) | ({
            mix_hash?: dependency_1.common.ProtoHash;
        }) | ({
            nonce?: number;
        }) | ({
            utxo_root?: dependency_1.common.ProtoHash;
        }) | ({
            etx_set_hash?: dependency_1.common.ProtoHash;
        }))));
        get parent_hash(): dependency_1.common.ProtoHash[];
        set parent_hash(value: dependency_1.common.ProtoHash[]);
        get uncle_hash(): dependency_1.common.ProtoHash;
        set uncle_hash(value: dependency_1.common.ProtoHash);
        get has_uncle_hash(): boolean;
        get coinbase(): Uint8Array;
        set coinbase(value: Uint8Array);
        get has_coinbase(): boolean;
        get evm_root(): dependency_1.common.ProtoHash;
        set evm_root(value: dependency_1.common.ProtoHash);
        get has_evm_root(): boolean;
        get tx_hash(): dependency_1.common.ProtoHash;
        set tx_hash(value: dependency_1.common.ProtoHash);
        get has_tx_hash(): boolean;
        get etx_hash(): dependency_1.common.ProtoHash;
        set etx_hash(value: dependency_1.common.ProtoHash);
        get has_etx_hash(): boolean;
        get etx_rollup_hash(): dependency_1.common.ProtoHash;
        set etx_rollup_hash(value: dependency_1.common.ProtoHash);
        get has_etx_rollup_hash(): boolean;
        get manifest_hash(): dependency_1.common.ProtoHash[];
        set manifest_hash(value: dependency_1.common.ProtoHash[]);
        get receipt_hash(): dependency_1.common.ProtoHash;
        set receipt_hash(value: dependency_1.common.ProtoHash);
        get has_receipt_hash(): boolean;
        get difficulty(): Uint8Array;
        set difficulty(value: Uint8Array);
        get has_difficulty(): boolean;
        get parent_entropy(): Uint8Array[];
        set parent_entropy(value: Uint8Array[]);
        get parent_delta_s(): Uint8Array[];
        set parent_delta_s(value: Uint8Array[]);
        get number(): Uint8Array[];
        set number(value: Uint8Array[]);
        get gas_limit(): number;
        set gas_limit(value: number);
        get has_gas_limit(): boolean;
        get gas_used(): number;
        set gas_used(value: number);
        get has_gas_used(): boolean;
        get base_fee(): Uint8Array;
        set base_fee(value: Uint8Array);
        get has_base_fee(): boolean;
        get location(): dependency_1.common.ProtoLocation;
        set location(value: dependency_1.common.ProtoLocation);
        get has_location(): boolean;
        get time(): number;
        set time(value: number);
        get has_time(): boolean;
        get extra(): Uint8Array;
        set extra(value: Uint8Array);
        get has_extra(): boolean;
        get mix_hash(): dependency_1.common.ProtoHash;
        set mix_hash(value: dependency_1.common.ProtoHash);
        get has_mix_hash(): boolean;
        get nonce(): number;
        set nonce(value: number);
        get has_nonce(): boolean;
        get utxo_root(): dependency_1.common.ProtoHash;
        set utxo_root(value: dependency_1.common.ProtoHash);
        get has_utxo_root(): boolean;
        get etx_set_hash(): dependency_1.common.ProtoHash;
        set etx_set_hash(value: dependency_1.common.ProtoHash);
        get has_etx_set_hash(): boolean;
        get _uncle_hash(): "none" | "uncle_hash";
        get _coinbase(): "none" | "coinbase";
        get _evm_root(): "none" | "evm_root";
        get _tx_hash(): "none" | "tx_hash";
        get _etx_hash(): "none" | "etx_hash";
        get _etx_rollup_hash(): "none" | "etx_rollup_hash";
        get _receipt_hash(): "none" | "receipt_hash";
        get _difficulty(): "none" | "difficulty";
        get _gas_limit(): "none" | "gas_limit";
        get _gas_used(): "none" | "gas_used";
        get _base_fee(): "none" | "base_fee";
        get _location(): "none" | "location";
        get _time(): "none" | "time";
        get _extra(): "none" | "extra";
        get _mix_hash(): "none" | "mix_hash";
        get _nonce(): "none" | "nonce";
        get _utxo_root(): "none" | "utxo_root";
        get _etx_set_hash(): "none" | "etx_set_hash";
        static fromObject(data: {
            parent_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
            uncle_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            coinbase?: Uint8Array;
            evm_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            etx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            etx_rollup_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            manifest_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
            receipt_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            difficulty?: Uint8Array;
            parent_entropy?: Uint8Array[];
            parent_delta_s?: Uint8Array[];
            number?: Uint8Array[];
            gas_limit?: number;
            gas_used?: number;
            base_fee?: Uint8Array;
            location?: ReturnType<typeof dependency_1.common.ProtoLocation.prototype.toObject>;
            time?: number;
            extra?: Uint8Array;
            mix_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            nonce?: number;
            utxo_root?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            etx_set_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
        }): ProtoHeader;
        toObject(): {
            parent_hash?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
            uncle_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            coinbase?: Uint8Array | undefined;
            evm_root?: {
                value?: Uint8Array | undefined;
            } | undefined;
            tx_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            etx_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            etx_rollup_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            manifest_hash?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
            receipt_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            difficulty?: Uint8Array | undefined;
            parent_entropy?: Uint8Array[] | undefined;
            parent_delta_s?: Uint8Array[] | undefined;
            number?: Uint8Array[] | undefined;
            gas_limit?: number | undefined;
            gas_used?: number | undefined;
            base_fee?: Uint8Array | undefined;
            location?: {
                value?: Uint8Array | undefined;
            } | undefined;
            time?: number | undefined;
            extra?: Uint8Array | undefined;
            mix_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            nonce?: number | undefined;
            utxo_root?: {
                value?: Uint8Array | undefined;
            } | undefined;
            etx_set_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoHeader;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoHeader;
    }
    class ProtoTransaction extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            type?: number;
        }) | ({
            to?: Uint8Array;
        }) | ({
            nonce?: number;
        }) | ({
            value?: Uint8Array;
        }) | ({
            gas?: number;
        }) | ({
            data?: Uint8Array;
        }) | ({
            chain_id?: Uint8Array;
        }) | ({
            gas_fee_cap?: Uint8Array;
        }) | ({
            gas_tip_cap?: Uint8Array;
        }) | ({
            access_list?: ProtoAccessList;
        }) | ({
            v?: Uint8Array;
        }) | ({
            r?: Uint8Array;
        }) | ({
            s?: Uint8Array;
        }) | ({
            originating_tx_hash?: dependency_1.common.ProtoHash;
        }) | ({
            etx_index?: number;
        }) | ({
            tx_ins?: ProtoTxIns;
        }) | ({
            tx_outs?: ProtoTxOuts;
        }) | ({
            signature?: Uint8Array;
        }) | ({
            etx_sender?: Uint8Array;
        }))));
        get type(): number;
        set type(value: number);
        get has_type(): boolean;
        get to(): Uint8Array;
        set to(value: Uint8Array);
        get has_to(): boolean;
        get nonce(): number;
        set nonce(value: number);
        get has_nonce(): boolean;
        get value(): Uint8Array;
        set value(value: Uint8Array);
        get has_value(): boolean;
        get gas(): number;
        set gas(value: number);
        get has_gas(): boolean;
        get data(): Uint8Array;
        set data(value: Uint8Array);
        get has_data(): boolean;
        get chain_id(): Uint8Array;
        set chain_id(value: Uint8Array);
        get has_chain_id(): boolean;
        get gas_fee_cap(): Uint8Array;
        set gas_fee_cap(value: Uint8Array);
        get has_gas_fee_cap(): boolean;
        get gas_tip_cap(): Uint8Array;
        set gas_tip_cap(value: Uint8Array);
        get has_gas_tip_cap(): boolean;
        get access_list(): ProtoAccessList;
        set access_list(value: ProtoAccessList);
        get has_access_list(): boolean;
        get v(): Uint8Array;
        set v(value: Uint8Array);
        get has_v(): boolean;
        get r(): Uint8Array;
        set r(value: Uint8Array);
        get has_r(): boolean;
        get s(): Uint8Array;
        set s(value: Uint8Array);
        get has_s(): boolean;
        get originating_tx_hash(): dependency_1.common.ProtoHash;
        set originating_tx_hash(value: dependency_1.common.ProtoHash);
        get has_originating_tx_hash(): boolean;
        get etx_index(): number;
        set etx_index(value: number);
        get has_etx_index(): boolean;
        get tx_ins(): ProtoTxIns;
        set tx_ins(value: ProtoTxIns);
        get has_tx_ins(): boolean;
        get tx_outs(): ProtoTxOuts;
        set tx_outs(value: ProtoTxOuts);
        get has_tx_outs(): boolean;
        get signature(): Uint8Array;
        set signature(value: Uint8Array);
        get has_signature(): boolean;
        get etx_sender(): Uint8Array;
        set etx_sender(value: Uint8Array);
        get has_etx_sender(): boolean;
        get _type(): "none" | "type";
        get _to(): "none" | "to";
        get _nonce(): "none" | "nonce";
        get _value(): "none" | "value";
        get _gas(): "none" | "gas";
        get _data(): "none" | "data";
        get _chain_id(): "none" | "chain_id";
        get _gas_fee_cap(): "none" | "gas_fee_cap";
        get _gas_tip_cap(): "none" | "gas_tip_cap";
        get _access_list(): "none" | "access_list";
        get _v(): "none" | "v";
        get _r(): "none" | "r";
        get _s(): "none" | "s";
        get _originating_tx_hash(): "none" | "originating_tx_hash";
        get _etx_index(): "none" | "etx_index";
        get _tx_ins(): "none" | "tx_ins";
        get _tx_outs(): "none" | "tx_outs";
        get _signature(): "none" | "signature";
        get _etx_sender(): "none" | "etx_sender";
        static fromObject(data: {
            type?: number;
            to?: Uint8Array;
            nonce?: number;
            value?: Uint8Array;
            gas?: number;
            data?: Uint8Array;
            chain_id?: Uint8Array;
            gas_fee_cap?: Uint8Array;
            gas_tip_cap?: Uint8Array;
            access_list?: ReturnType<typeof ProtoAccessList.prototype.toObject>;
            v?: Uint8Array;
            r?: Uint8Array;
            s?: Uint8Array;
            originating_tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            etx_index?: number;
            tx_ins?: ReturnType<typeof ProtoTxIns.prototype.toObject>;
            tx_outs?: ReturnType<typeof ProtoTxOuts.prototype.toObject>;
            signature?: Uint8Array;
            etx_sender?: Uint8Array;
        }): ProtoTransaction;
        toObject(): {
            type?: number | undefined;
            to?: Uint8Array | undefined;
            nonce?: number | undefined;
            value?: Uint8Array | undefined;
            gas?: number | undefined;
            data?: Uint8Array | undefined;
            chain_id?: Uint8Array | undefined;
            gas_fee_cap?: Uint8Array | undefined;
            gas_tip_cap?: Uint8Array | undefined;
            access_list?: {
                access_tuples?: {
                    address?: Uint8Array | undefined;
                    storage_key?: {
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                }[] | undefined;
            } | undefined;
            v?: Uint8Array | undefined;
            r?: Uint8Array | undefined;
            s?: Uint8Array | undefined;
            originating_tx_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            etx_index?: number | undefined;
            tx_ins?: {
                tx_ins?: {
                    previous_out_point?: {
                        hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        index?: number | undefined;
                    } | undefined;
                    pub_key?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
            tx_outs?: {
                tx_outs?: {
                    denomination?: number | undefined;
                    address?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
            signature?: Uint8Array | undefined;
            etx_sender?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTransaction;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTransaction;
    }
    class ProtoTransactions extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            transactions?: ProtoTransaction[];
        });
        get transactions(): ProtoTransaction[];
        set transactions(value: ProtoTransaction[]);
        static fromObject(data: {
            transactions?: ReturnType<typeof ProtoTransaction.prototype.toObject>[];
        }): ProtoTransactions;
        toObject(): {
            transactions?: {
                type?: number | undefined;
                to?: Uint8Array | undefined;
                nonce?: number | undefined;
                value?: Uint8Array | undefined;
                gas?: number | undefined;
                data?: Uint8Array | undefined;
                chain_id?: Uint8Array | undefined;
                gas_fee_cap?: Uint8Array | undefined;
                gas_tip_cap?: Uint8Array | undefined;
                access_list?: {
                    access_tuples?: {
                        address?: Uint8Array | undefined;
                        storage_key?: {
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                    }[] | undefined;
                } | undefined;
                v?: Uint8Array | undefined;
                r?: Uint8Array | undefined;
                s?: Uint8Array | undefined;
                originating_tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_index?: number | undefined;
                tx_ins?: {
                    tx_ins?: {
                        previous_out_point?: {
                            hash?: {
                                value?: Uint8Array | undefined;
                            } | undefined;
                            index?: number | undefined;
                        } | undefined;
                        pub_key?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
                tx_outs?: {
                    tx_outs?: {
                        denomination?: number | undefined;
                        address?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
                signature?: Uint8Array | undefined;
                etx_sender?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTransactions;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTransactions;
    }
    class ProtoHeaders extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            headers?: ProtoHeader[];
        });
        get headers(): ProtoHeader[];
        set headers(value: ProtoHeader[]);
        static fromObject(data: {
            headers?: ReturnType<typeof ProtoHeader.prototype.toObject>[];
        }): ProtoHeaders;
        toObject(): {
            headers?: {
                parent_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                uncle_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                coinbase?: Uint8Array | undefined;
                evm_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_rollup_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                manifest_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                receipt_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                difficulty?: Uint8Array | undefined;
                parent_entropy?: Uint8Array[] | undefined;
                parent_delta_s?: Uint8Array[] | undefined;
                number?: Uint8Array[] | undefined;
                gas_limit?: number | undefined;
                gas_used?: number | undefined;
                base_fee?: Uint8Array | undefined;
                location?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                time?: number | undefined;
                extra?: Uint8Array | undefined;
                mix_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                nonce?: number | undefined;
                utxo_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_set_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoHeaders;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoHeaders;
    }
    class ProtoManifest extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            manifest?: dependency_1.common.ProtoHash[];
        });
        get manifest(): dependency_1.common.ProtoHash[];
        set manifest(value: dependency_1.common.ProtoHash[]);
        static fromObject(data: {
            manifest?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
        }): ProtoManifest;
        toObject(): {
            manifest?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoManifest;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoManifest;
    }
    class ProtoAccessList extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            access_tuples?: ProtoAccessTuple[];
        });
        get access_tuples(): ProtoAccessTuple[];
        set access_tuples(value: ProtoAccessTuple[]);
        static fromObject(data: {
            access_tuples?: ReturnType<typeof ProtoAccessTuple.prototype.toObject>[];
        }): ProtoAccessList;
        toObject(): {
            access_tuples?: {
                address?: Uint8Array | undefined;
                storage_key?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoAccessList;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoAccessList;
    }
    class ProtoAccessTuple extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            address?: Uint8Array;
            storage_key?: dependency_1.common.ProtoHash[];
        });
        get address(): Uint8Array;
        set address(value: Uint8Array);
        get storage_key(): dependency_1.common.ProtoHash[];
        set storage_key(value: dependency_1.common.ProtoHash[]);
        static fromObject(data: {
            address?: Uint8Array;
            storage_key?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
        }): ProtoAccessTuple;
        toObject(): {
            address?: Uint8Array | undefined;
            storage_key?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoAccessTuple;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoAccessTuple;
    }
    class ProtoReceiptForStorage extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            post_state_or_status?: Uint8Array;
            cumulative_gas_used?: number;
            tx_hash?: dependency_1.common.ProtoHash;
            contract_address?: dependency_1.common.ProtoAddress;
            logs?: ProtoLogsForStorage;
            etxs?: ProtoTransactions;
            gas_used?: number;
        });
        get post_state_or_status(): Uint8Array;
        set post_state_or_status(value: Uint8Array);
        get cumulative_gas_used(): number;
        set cumulative_gas_used(value: number);
        get tx_hash(): dependency_1.common.ProtoHash;
        set tx_hash(value: dependency_1.common.ProtoHash);
        get has_tx_hash(): boolean;
        get contract_address(): dependency_1.common.ProtoAddress;
        set contract_address(value: dependency_1.common.ProtoAddress);
        get has_contract_address(): boolean;
        get logs(): ProtoLogsForStorage;
        set logs(value: ProtoLogsForStorage);
        get has_logs(): boolean;
        get etxs(): ProtoTransactions;
        set etxs(value: ProtoTransactions);
        get has_etxs(): boolean;
        get gas_used(): number;
        set gas_used(value: number);
        static fromObject(data: {
            post_state_or_status?: Uint8Array;
            cumulative_gas_used?: number;
            tx_hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            contract_address?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;
            logs?: ReturnType<typeof ProtoLogsForStorage.prototype.toObject>;
            etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;
            gas_used?: number;
        }): ProtoReceiptForStorage;
        toObject(): {
            post_state_or_status?: Uint8Array | undefined;
            cumulative_gas_used?: number | undefined;
            tx_hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            contract_address?: {
                value?: Uint8Array | undefined;
            } | undefined;
            logs?: {
                logs?: {
                    address?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    topics?: {
                        value?: Uint8Array | undefined;
                    }[] | undefined;
                    data?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
            etxs?: {
                transactions?: {
                    type?: number | undefined;
                    to?: Uint8Array | undefined;
                    nonce?: number | undefined;
                    value?: Uint8Array | undefined;
                    gas?: number | undefined;
                    data?: Uint8Array | undefined;
                    chain_id?: Uint8Array | undefined;
                    gas_fee_cap?: Uint8Array | undefined;
                    gas_tip_cap?: Uint8Array | undefined;
                    access_list?: {
                        access_tuples?: {
                            address?: Uint8Array | undefined;
                            storage_key?: {
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                        }[] | undefined;
                    } | undefined;
                    v?: Uint8Array | undefined;
                    r?: Uint8Array | undefined;
                    s?: Uint8Array | undefined;
                    originating_tx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_index?: number | undefined;
                    tx_ins?: {
                        tx_ins?: {
                            previous_out_point?: {
                                hash?: {
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                index?: number | undefined;
                            } | undefined;
                            pub_key?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    tx_outs?: {
                        tx_outs?: {
                            denomination?: number | undefined;
                            address?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                    etx_sender?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
            gas_used?: number | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoReceiptForStorage;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoReceiptForStorage;
    }
    class ProtoReceiptsForStorage extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            receipts?: ProtoReceiptForStorage[];
        });
        get receipts(): ProtoReceiptForStorage[];
        set receipts(value: ProtoReceiptForStorage[]);
        static fromObject(data: {
            receipts?: ReturnType<typeof ProtoReceiptForStorage.prototype.toObject>[];
        }): ProtoReceiptsForStorage;
        toObject(): {
            receipts?: {
                post_state_or_status?: Uint8Array | undefined;
                cumulative_gas_used?: number | undefined;
                tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                contract_address?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                logs?: {
                    logs?: {
                        address?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        topics?: {
                            value?: Uint8Array | undefined;
                        }[] | undefined;
                        data?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
                etxs?: {
                    transactions?: {
                        type?: number | undefined;
                        to?: Uint8Array | undefined;
                        nonce?: number | undefined;
                        value?: Uint8Array | undefined;
                        gas?: number | undefined;
                        data?: Uint8Array | undefined;
                        chain_id?: Uint8Array | undefined;
                        gas_fee_cap?: Uint8Array | undefined;
                        gas_tip_cap?: Uint8Array | undefined;
                        access_list?: {
                            access_tuples?: {
                                address?: Uint8Array | undefined;
                                storage_key?: {
                                    value?: Uint8Array | undefined;
                                }[] | undefined;
                            }[] | undefined;
                        } | undefined;
                        v?: Uint8Array | undefined;
                        r?: Uint8Array | undefined;
                        s?: Uint8Array | undefined;
                        originating_tx_hash?: {
                            value?: Uint8Array | undefined;
                        } | undefined;
                        etx_index?: number | undefined;
                        tx_ins?: {
                            tx_ins?: {
                                previous_out_point?: {
                                    hash?: {
                                        value?: Uint8Array | undefined;
                                    } | undefined;
                                    index?: number | undefined;
                                } | undefined;
                                pub_key?: Uint8Array | undefined;
                            }[] | undefined;
                        } | undefined;
                        tx_outs?: {
                            tx_outs?: {
                                denomination?: number | undefined;
                                address?: Uint8Array | undefined;
                            }[] | undefined;
                        } | undefined;
                        signature?: Uint8Array | undefined;
                        etx_sender?: Uint8Array | undefined;
                    }[] | undefined;
                } | undefined;
                gas_used?: number | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoReceiptsForStorage;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoReceiptsForStorage;
    }
    class ProtoLogForStorage extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            address?: dependency_1.common.ProtoAddress;
            topics?: dependency_1.common.ProtoHash[];
            data?: Uint8Array;
        });
        get address(): dependency_1.common.ProtoAddress;
        set address(value: dependency_1.common.ProtoAddress);
        get has_address(): boolean;
        get topics(): dependency_1.common.ProtoHash[];
        set topics(value: dependency_1.common.ProtoHash[]);
        get data(): Uint8Array;
        set data(value: Uint8Array);
        static fromObject(data: {
            address?: ReturnType<typeof dependency_1.common.ProtoAddress.prototype.toObject>;
            topics?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
            data?: Uint8Array;
        }): ProtoLogForStorage;
        toObject(): {
            address?: {
                value?: Uint8Array | undefined;
            } | undefined;
            topics?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
            data?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoLogForStorage;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoLogForStorage;
    }
    class ProtoLogsForStorage extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            logs?: ProtoLogForStorage[];
        });
        get logs(): ProtoLogForStorage[];
        set logs(value: ProtoLogForStorage[]);
        static fromObject(data: {
            logs?: ReturnType<typeof ProtoLogForStorage.prototype.toObject>[];
        }): ProtoLogsForStorage;
        toObject(): {
            logs?: {
                address?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                topics?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                data?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoLogsForStorage;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoLogsForStorage;
    }
    class ProtoPendingHeader extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            header?: ProtoHeader;
        }) | ({
            termini?: ProtoTermini;
        }))));
        get header(): ProtoHeader;
        set header(value: ProtoHeader);
        get has_header(): boolean;
        get termini(): ProtoTermini;
        set termini(value: ProtoTermini);
        get has_termini(): boolean;
        get _header(): "none" | "header";
        get _termini(): "none" | "termini";
        static fromObject(data: {
            header?: ReturnType<typeof ProtoHeader.prototype.toObject>;
            termini?: ReturnType<typeof ProtoTermini.prototype.toObject>;
        }): ProtoPendingHeader;
        toObject(): {
            header?: {
                parent_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                uncle_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                coinbase?: Uint8Array | undefined;
                evm_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_rollup_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                manifest_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                receipt_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                difficulty?: Uint8Array | undefined;
                parent_entropy?: Uint8Array[] | undefined;
                parent_delta_s?: Uint8Array[] | undefined;
                number?: Uint8Array[] | undefined;
                gas_limit?: number | undefined;
                gas_used?: number | undefined;
                base_fee?: Uint8Array | undefined;
                location?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                time?: number | undefined;
                extra?: Uint8Array | undefined;
                mix_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                nonce?: number | undefined;
                utxo_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_set_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            termini?: {
                dom_termini?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                sub_termini?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoPendingHeader;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoPendingHeader;
    }
    class ProtoTermini extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            dom_termini?: dependency_1.common.ProtoHash[];
            sub_termini?: dependency_1.common.ProtoHash[];
        });
        get dom_termini(): dependency_1.common.ProtoHash[];
        set dom_termini(value: dependency_1.common.ProtoHash[]);
        get sub_termini(): dependency_1.common.ProtoHash[];
        set sub_termini(value: dependency_1.common.ProtoHash[]);
        static fromObject(data: {
            dom_termini?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
            sub_termini?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>[];
        }): ProtoTermini;
        toObject(): {
            dom_termini?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
            sub_termini?: {
                value?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTermini;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTermini;
    }
    class ProtoEtxSet extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            etx_hashes?: Uint8Array;
        }))));
        get etx_hashes(): Uint8Array;
        set etx_hashes(value: Uint8Array);
        get has_etx_hashes(): boolean;
        get _etx_hashes(): "none" | "etx_hashes";
        static fromObject(data: {
            etx_hashes?: Uint8Array;
        }): ProtoEtxSet;
        toObject(): {
            etx_hashes?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoEtxSet;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoEtxSet;
    }
    class ProtoPendingEtxs extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            header?: ProtoHeader;
        }) | ({
            etxs?: ProtoTransactions;
        }))));
        get header(): ProtoHeader;
        set header(value: ProtoHeader);
        get has_header(): boolean;
        get etxs(): ProtoTransactions;
        set etxs(value: ProtoTransactions);
        get has_etxs(): boolean;
        get _header(): "none" | "header";
        get _etxs(): "none" | "etxs";
        static fromObject(data: {
            header?: ReturnType<typeof ProtoHeader.prototype.toObject>;
            etxs?: ReturnType<typeof ProtoTransactions.prototype.toObject>;
        }): ProtoPendingEtxs;
        toObject(): {
            header?: {
                parent_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                uncle_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                coinbase?: Uint8Array | undefined;
                evm_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_rollup_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                manifest_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                receipt_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                difficulty?: Uint8Array | undefined;
                parent_entropy?: Uint8Array[] | undefined;
                parent_delta_s?: Uint8Array[] | undefined;
                number?: Uint8Array[] | undefined;
                gas_limit?: number | undefined;
                gas_used?: number | undefined;
                base_fee?: Uint8Array | undefined;
                location?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                time?: number | undefined;
                extra?: Uint8Array | undefined;
                mix_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                nonce?: number | undefined;
                utxo_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_set_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            etxs?: {
                transactions?: {
                    type?: number | undefined;
                    to?: Uint8Array | undefined;
                    nonce?: number | undefined;
                    value?: Uint8Array | undefined;
                    gas?: number | undefined;
                    data?: Uint8Array | undefined;
                    chain_id?: Uint8Array | undefined;
                    gas_fee_cap?: Uint8Array | undefined;
                    gas_tip_cap?: Uint8Array | undefined;
                    access_list?: {
                        access_tuples?: {
                            address?: Uint8Array | undefined;
                            storage_key?: {
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                        }[] | undefined;
                    } | undefined;
                    v?: Uint8Array | undefined;
                    r?: Uint8Array | undefined;
                    s?: Uint8Array | undefined;
                    originating_tx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_index?: number | undefined;
                    tx_ins?: {
                        tx_ins?: {
                            previous_out_point?: {
                                hash?: {
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                index?: number | undefined;
                            } | undefined;
                            pub_key?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    tx_outs?: {
                        tx_outs?: {
                            denomination?: number | undefined;
                            address?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                    etx_sender?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoPendingEtxs;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoPendingEtxs;
    }
    class ProtoPendingEtxsRollup extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            header?: ProtoHeader;
        }) | ({
            etxs_rollup?: ProtoTransactions;
        }))));
        get header(): ProtoHeader;
        set header(value: ProtoHeader);
        get has_header(): boolean;
        get etxs_rollup(): ProtoTransactions;
        set etxs_rollup(value: ProtoTransactions);
        get has_etxs_rollup(): boolean;
        get _header(): "none" | "header";
        get _etxs_rollup(): "none" | "etxs_rollup";
        static fromObject(data: {
            header?: ReturnType<typeof ProtoHeader.prototype.toObject>;
            etxs_rollup?: ReturnType<typeof ProtoTransactions.prototype.toObject>;
        }): ProtoPendingEtxsRollup;
        toObject(): {
            header?: {
                parent_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                uncle_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                coinbase?: Uint8Array | undefined;
                evm_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                tx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_rollup_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                manifest_hash?: {
                    value?: Uint8Array | undefined;
                }[] | undefined;
                receipt_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                difficulty?: Uint8Array | undefined;
                parent_entropy?: Uint8Array[] | undefined;
                parent_delta_s?: Uint8Array[] | undefined;
                number?: Uint8Array[] | undefined;
                gas_limit?: number | undefined;
                gas_used?: number | undefined;
                base_fee?: Uint8Array | undefined;
                location?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                time?: number | undefined;
                extra?: Uint8Array | undefined;
                mix_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                nonce?: number | undefined;
                utxo_root?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                etx_set_hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
            } | undefined;
            etxs_rollup?: {
                transactions?: {
                    type?: number | undefined;
                    to?: Uint8Array | undefined;
                    nonce?: number | undefined;
                    value?: Uint8Array | undefined;
                    gas?: number | undefined;
                    data?: Uint8Array | undefined;
                    chain_id?: Uint8Array | undefined;
                    gas_fee_cap?: Uint8Array | undefined;
                    gas_tip_cap?: Uint8Array | undefined;
                    access_list?: {
                        access_tuples?: {
                            address?: Uint8Array | undefined;
                            storage_key?: {
                                value?: Uint8Array | undefined;
                            }[] | undefined;
                        }[] | undefined;
                    } | undefined;
                    v?: Uint8Array | undefined;
                    r?: Uint8Array | undefined;
                    s?: Uint8Array | undefined;
                    originating_tx_hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    etx_index?: number | undefined;
                    tx_ins?: {
                        tx_ins?: {
                            previous_out_point?: {
                                hash?: {
                                    value?: Uint8Array | undefined;
                                } | undefined;
                                index?: number | undefined;
                            } | undefined;
                            pub_key?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    tx_outs?: {
                        tx_outs?: {
                            denomination?: number | undefined;
                            address?: Uint8Array | undefined;
                        }[] | undefined;
                    } | undefined;
                    signature?: Uint8Array | undefined;
                    etx_sender?: Uint8Array | undefined;
                }[] | undefined;
            } | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoPendingEtxsRollup;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoPendingEtxsRollup;
    }
    class ProtoTxIns extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            tx_ins?: ProtoTxIn[];
        });
        get tx_ins(): ProtoTxIn[];
        set tx_ins(value: ProtoTxIn[]);
        static fromObject(data: {
            tx_ins?: ReturnType<typeof ProtoTxIn.prototype.toObject>[];
        }): ProtoTxIns;
        toObject(): {
            tx_ins?: {
                previous_out_point?: {
                    hash?: {
                        value?: Uint8Array | undefined;
                    } | undefined;
                    index?: number | undefined;
                } | undefined;
                pub_key?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxIns;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTxIns;
    }
    class ProtoTxOuts extends pb_1.Message {
        #private;
        constructor(data?: any[] | {
            tx_outs?: ProtoTxOut[];
        });
        get tx_outs(): ProtoTxOut[];
        set tx_outs(value: ProtoTxOut[]);
        static fromObject(data: {
            tx_outs?: ReturnType<typeof ProtoTxOut.prototype.toObject>[];
        }): ProtoTxOuts;
        toObject(): {
            tx_outs?: {
                denomination?: number | undefined;
                address?: Uint8Array | undefined;
            }[] | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxOuts;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTxOuts;
    }
    class ProtoTxIn extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            previous_out_point?: ProtoOutPoint;
        }) | ({
            pub_key?: Uint8Array;
        }))));
        get previous_out_point(): ProtoOutPoint;
        set previous_out_point(value: ProtoOutPoint);
        get has_previous_out_point(): boolean;
        get pub_key(): Uint8Array;
        set pub_key(value: Uint8Array);
        get has_pub_key(): boolean;
        get _previous_out_point(): "none" | "previous_out_point";
        get _pub_key(): "none" | "pub_key";
        static fromObject(data: {
            previous_out_point?: ReturnType<typeof ProtoOutPoint.prototype.toObject>;
            pub_key?: Uint8Array;
        }): ProtoTxIn;
        toObject(): {
            previous_out_point?: {
                hash?: {
                    value?: Uint8Array | undefined;
                } | undefined;
                index?: number | undefined;
            } | undefined;
            pub_key?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxIn;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTxIn;
    }
    class ProtoOutPoint extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            hash?: dependency_1.common.ProtoHash;
        }) | ({
            index?: number;
        }))));
        get hash(): dependency_1.common.ProtoHash;
        set hash(value: dependency_1.common.ProtoHash);
        get has_hash(): boolean;
        get index(): number;
        set index(value: number);
        get has_index(): boolean;
        get _hash(): "none" | "hash";
        get _index(): "index" | "none";
        static fromObject(data: {
            hash?: ReturnType<typeof dependency_1.common.ProtoHash.prototype.toObject>;
            index?: number;
        }): ProtoOutPoint;
        toObject(): {
            hash?: {
                value?: Uint8Array | undefined;
            } | undefined;
            index?: number | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoOutPoint;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoOutPoint;
    }
    class ProtoTxOut extends pb_1.Message {
        #private;
        constructor(data?: any[] | ({} & (({
            denomination?: number;
        }) | ({
            address?: Uint8Array;
        }))));
        get denomination(): number;
        set denomination(value: number);
        get has_denomination(): boolean;
        get address(): Uint8Array;
        set address(value: Uint8Array);
        get has_address(): boolean;
        get _denomination(): "none" | "denomination";
        get _address(): "none" | "address";
        static fromObject(data: {
            denomination?: number;
            address?: Uint8Array;
        }): ProtoTxOut;
        toObject(): {
            denomination?: number | undefined;
            address?: Uint8Array | undefined;
        };
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ProtoTxOut;
        serializeBinary(): Uint8Array;
        static deserializeBinary(bytes: Uint8Array): ProtoTxOut;
    }
}
//# sourceMappingURL=proto_block.d.ts.map